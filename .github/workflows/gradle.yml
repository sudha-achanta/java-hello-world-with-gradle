# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
#env:
  #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: jb-hello-world-gradle-0.1.0.jar # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./build/libs
        # The desired behavior if no files are found using the provided path.
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        # Artifact name
        name: jb-hello-world-gradle-0.1.0.jar
        # Destination path
        path: ./dist/sudha
    - run: |
          ls -ltr ./dist/sudha
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    #- name: Build and analyze
     # env:
     #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
     #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #run: ./gradlew build jacocoTestReport sonarqube --info
     # run: ./gradlew sonarqube --info
    
    #- name: SonarCloud Scan
     # uses: sonarsource/sonarcloud-github-action@master
     # env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        # Artifact name
        name: jb-hello-world-gradle-0.1.0.jar
        # Destination path
        path: ./dist/terraformdeploy
    - run: |
          ls -ltr ./dist/terraformdeploy
    - name: AWS S3 Create Bucket
      uses: aitorres/aws-s3-create-bucket@v1.2.0
      with:
          # Name of the bucket that will be created (make sure it is unique)
          bucket-name: java-hello-world
          # AWS Access Key ID
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          # AWS Secret Access Key
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          # AWS Region (default: us-east-1)
          aws-region: us-west-2 # default is us-east-1
          # ACL to apply to the bucket during creation (default: private)
          acl: private # default is private
    - name: artifact uplod to s3
      uses: keithweaver/aws-s3-github-action@v1.0.0
      with:
        command: cp
        source: ./dist/terraformdeploy/jb-hello-world-gradle-0.1.0.jar
        destination: s3://java-hello-world/hello/jb-hello-world-gradle-0.1.0.jar
        aws_access_key_id: ${{ secrets.ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.SECRET_KEY }}
        aws_region: us-west-2


    
  
